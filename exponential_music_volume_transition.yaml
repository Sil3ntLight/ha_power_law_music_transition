blueprint:
  name: Exponential Music Volume Transition
  author: Sil3ntLight
  description: >
    Script to transition music volume over specified time following the power law curve specified.
    Adapted from ha_power_law_light_transition by Coleslaw1994 (https://github.com/Coleslaw1994/ha_power_law_light_transition/blob/main/power_law_light_transition.yaml)
  source_url: https://github.com/Sil3ntLight/ha_power_law_music_transition/blob/main/power_law_light_transition.yaml
  domain: script
  homeassistant:
    min_version: 2024.9.0
fields:
  target_mediaplayer:
    description: Media Player to have volume transitioned
    selector:
      entity:
        filter:
          domain: media_player
    name: Media Player
    required: true
  starting_volume:
    description: >-
      The volume to set the media player to initially.
    selector:
      number:
        min: 0.00
        max: 1.00
    default: 0.00
    name: Starting volume
    required: true
  target_volume:
    description: The volume the media player should reach by the end of the transition.
    selector:
      number:
        min: 0.01
        max: 1.00
    default: 1.00
    name: Final volume
    required: true
  volume_exponent:
    description: >-
      The exponent which defines the power law curve to follow for volume,
      e.g. 2 for the parabolic curve y=x^2. You can easily visualize power law
      curves by entering the formula into any online graphing tool.
    selector:
      number: null
    default: 2
    name: Volume exponent
    required: true
  transition_length:
    description: >-
      The time it will take to complete the transition in minutes. Take this
      into account when setting up the automation this script is called by.
    selector:
      number: null
    default: 30
    name: Transition length
    required: true
  steps_per_minute:
    description: >-
      The number of commands home assistant will send to the media player each minute.
      Higher numbers will result in more accurate tracking along the curve. 
    selector:
      number: null
    default: 12
    name: Steps Per minute
    required: true
sequence:
  - variables:
      interval_time: "{{60 / steps_per_minute}}"
      start_time: "{{as_timestamp(now())}}"
      finish_time: "{{start_time + transition_length * 60}}"
      starting_volume: "{{starting_volume}}"
      volume_change: "{{target_volume - starting_volume}}"
  - alias: Initial Volume Set
    action: media_player.volume_set
    data:
      volume_level: "{{starting_volume}}"
    target:
      entity_id: "{{target_mediaplayer}}"
  - alias: Transition
    repeat:
      until:
        - condition: template
          value_template: "{{as_timestamp(now()) >= finish_time - interval_time}}"
      sequence:
        - variables:
            percent: "{{(as_timestamp(now()) - start_time) / (transition_length * 60)}}"
            volume: >-
              {{(starting_volume |float + volume_change |float * percent
              |float ** volume_exponent |float) |round(3, "floor")}} 
        - if:
            - condition: template
              value_template: "{{is_state(target_mediaplayer, 'playing')}}"
          then:
            - action: media_player.volume_set
              data:
                volume_level: "{{volume}}"
              target:
                entity_id: "{{target_mediaplayer}}"
        - delay:
            seconds: "{{interval_time}}"
  - alias: Final Volume Set
    if:
      - condition: template
        value_template: "{{is_state(target_mediaplayer, 'playing')}}"
    then:
      - action: media_player.volume_set
        data:
          volume_level: "{{target_volume}}"
        target:
          entity_id: "{{target_mediaplayer}}"
mode: parallel
